{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { AngularFireMessaging } from '@angular/fire/messaging';\nimport { mergeMapTo } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <button (click)=\"requestPermission()\">\n    Hello this is a chat app. You should let us send you notifications for this reason.\n  </button>\n  `\n})\nexport class AppComponent {\n  constructor(private afMessaging: AngularFireMessaging) { }\n  requestPermission() {\n    this.afMessaging.requestPermission\n      .pipe(mergeMapTo(this.afMessaging.tokenChanges))\n      .subscribe(\n        (token) => { alert('Permission granted! Save to the server!' + token); },\n        (error) => { alert(error); },  \n      );\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// import { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularFireMessagingModule } from '@angular/fire/messaging';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireModule } from '@angular/fire';\n// import { MessagingService } from '../service/messaging.service';\nimport { environment } from '../environments/environment';\nimport { AsyncPipe } from '@angular/common';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n@NgModule({\n   declarations: [AppComponent],\n   imports: [\n      // AppRoutingModule,\n      BrowserModule,\n      AngularFireDatabaseModule,\n      AngularFireAuthModule,\n      AngularFireMessagingModule,\n      AngularFireModule.initializeApp(environment.firebase),\n      ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n   ],\n   providers: [AsyncPipe],\n   bootstrap: [AppComponent]\n})\nexport class AppModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyBgNHZVOvWt7SbpViblgyCNzYX2GfDzO0U\",\n    authDomain: \"my-notifications-5498e.firebaseapp.com\",\n    databaseURL: \"https://my-notifications-5498e.firebaseio.com\",\n    projectId: \"my-notifications-5498e\",\n    storageBucket: \"my-notifications-5498e.appspot.com\",\n    messagingSenderId: \"253961749955\",\n    appId: \"1:253961749955:web:5400e70e025ed81ad26976\",\n    measurementId: \"G-39FN97PFQX\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}